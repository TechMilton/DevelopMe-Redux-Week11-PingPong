{"version":3,"sources":["components/Player/Player.js","components/Player/Player1.js","data/actions.js","components/Player/Player2.js","components/Winner/Winner.js","components/Winner/index.js","components/Reset/Reset.js","components/Reset/index.js","components/Settings/Settings.js","history.js","components/Settings/index.js","App.js","data/initialState.js","data/reducer.js","data/store.js","index.js"],"names":["Player","serving","score","handleClick","playerName","winner","className","onClick","connect","state","player1Name","player1","p1Serving","dispatch","type","player2Name","player2","Winner","Button","handleReset","Reset","Settings","props","winningScore","alernateEvery","handleSubmit","bind","handleChangeP1","handleChangeP2","handleWinningScore","handlealernateEvery","e","this","setState","currentTarget","value","preventDefault","onSubmit","for","onChange","required","class","Component","createBrowserHistory","data","saveSettings","history","push","App","handleP1Increment","handleP2Increment","to","exact","path","Player1","Player2","component","initialState","reducer","action","saveSettingsReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cf11960.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Player = ({ serving, score, handleClick, playerName, winner }) => {\r\n    return (\r\n        <div className=\"col-md-6 mt-4\">\r\n            <div className={\"card text-center\" + (serving ? \" bg-dark text-white\" : \"\")}>\r\n                <h5 className=\"card-header\">{playerName}</h5>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text display-1\">{score}</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <button className={\"form-control btn btn-success\" + (winner ? \" d-none\" : \"\")} onClick={handleClick}>+</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","import { connect } from \"react-redux\";\r\nimport Player from \"./Player\";\r\n\r\nimport { player1 } from \"../../data/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        playerName: state.player1Name,\r\n        winner: state.winner,\r\n        score: state.player1,\r\n        serving: state.p1Serving,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleClick: () => dispatch(player1()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n","export const player1 = () => {\r\n    return {\r\n        type: \"PLAYER1\",\r\n\r\n    };\r\n};\r\n\r\nexport const player2 = () => {\r\n    return {\r\n        type: \"PLAYER2\",\r\n    };\r\n};\r\n\r\nexport const reset = () => {\r\n    return {\r\n        type: \"RESET\",\r\n    };\r\n};\r\n\r\nexport const saveSettings = (data) => {\r\n    return {\r\n        type: \"SAVE_SETTINGS\",\r\n        player1Name: data.player1Name,\r\n        player2Name: data.player2Name,\r\n        winningScore: data.winningScore,\r\n        alernateEvery: data.alernateEvery,\r\n    };\r\n};","import { connect } from \"react-redux\";\r\nimport Player from \"./Player\";\r\n\r\nimport { player2 } from \"../../data/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        playerName: state.player2Name,\r\n        winner: state.winner,\r\n        score: state.player2,\r\n        serving: !state.p1Serving,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleClick: () => dispatch(player2()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","import React from 'react';\r\n\r\nconst Winner = ({ winner }) => {\r\n\r\n    return (\r\n        winner === \"\" ? null :\r\n            (<h2 className=\"alert alert-success\"> {winner} wins!</h2>)\r\n    );\r\n};\r\nexport default Winner;","import { connect } from \"react-redux\";\r\n\r\nimport Winner from \"./Winner\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        winner: state.winner,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Winner);","import React from 'react';\r\n\r\nconst Button = ({ handleReset }) => {\r\n    return (\r\n        <button className=\"btn btn-danger\" onClick={handleReset}>Reset</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import { connect } from \"react-redux\";\r\nimport Reset from \"./Reset\";\r\n\r\nimport { reset } from \"../../data/actions\";\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleReset: () => dispatch(reset()),\r\n    };\r\n};\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Reset);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Settings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            player1Name: props.player1Name,\r\n            player2Name: props.player2Name,\r\n            winningScore: props.winningScore,\r\n            alernateEvery: props.alernateEvery,\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChangeP1 = this.handleChangeP1.bind(this);\r\n        this.handleChangeP2 = this.handleChangeP2.bind(this);\r\n        this.handleWinningScore = this.handleWinningScore.bind(this);\r\n        this.handlealernateEvery = this.handlealernateEvery.bind(this);\r\n    }\r\n\r\n    handleChangeP1(e) {\r\n        this.setState({ player1Name: e.currentTarget.value });\r\n    }\r\n\r\n    handleChangeP2(e) {\r\n        this.setState({ player2Name: e.currentTarget.value });\r\n    }\r\n\r\n    handleWinningScore(e) {\r\n        this.setState({ winningScore: e.currentTarget.value });\r\n    }\r\n\r\n    handlealernateEvery(e) {\r\n        this.setState({ alernateEvery: e.currentTarget.value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.handleSubmit({ ...this.state });\r\n    }\r\n\r\n    render() {\r\n        let { player1Name, player2Name, winningScore, alernateEvery } = this.state;\r\n\r\n\r\n        return (\r\n            <form className=\"form-group\" onSubmit={this.handleSubmit} >\r\n                <div className=\"container\">\r\n                    <br />\r\n                    {/* Player 1 Name */}\r\n                    <label for=\"player1Name\">Player 1 Name:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        onChange={this.handleChangeP1}\r\n                        value={player1Name}\r\n                        required>\r\n                    </input>\r\n                    <br />\r\n                    {/* Player 2 Name */}\r\n                    <label for=\"player2Name\">Player 2 Name:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        onChange={this.handleChangeP2}\r\n                        value={player2Name}\r\n                        required>\r\n                    </input>\r\n                    <br />\r\n                    <div class=\"form-group\">\r\n                        <label for=\"winningScore\">Winning Score:</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            value={winningScore}\r\n                            onChange={this.handleWinningScore}>\r\n                        </input>\r\n                    </div>\r\n                    <br />\r\n                    <div class=\"form-group\">\r\n                        <label for=\"alernateEvery\">Alernate Every:</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            value={alernateEvery}\r\n                            onChange={this.handlealernateEvery}>\r\n                        </input>\r\n                    </div>\r\n\r\n                    <hr />\r\n\r\n                    {/* Submit Form */}\r\n                    <button className=\"btn btn-primary\">Start Game</button>\r\n                </div>\r\n            </form >\r\n        );\r\n    };\r\n}\r\n\r\nexport default Settings;","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import { connect } from \"react-redux\";\r\nimport Settings from \"./Settings\";\r\nimport { saveSettings } from \"../../data/actions\"\r\nimport history from \"../../history\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        player1Name: state.player1Name,\r\n        player2Name: state.player2Name,\r\n        winningScore: state.winningScore,\r\n        alernateEvery: state.alernateEvery,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleSubmit: (data) => {\r\n            dispatch(saveSettings(data));\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React from \"react\";\nimport { Router, Route, Switch, Link } from \"react-router-dom\";\n\nimport Player1 from \"./components/Player/Player1\";\nimport Player2 from \"./components/Player/Player2\";\nimport Winner from \"./components/Winner\";\nimport Reset from \"./components/Reset\";\nimport Settings from \"./components/Settings\";\n\nimport history from \"./history\";\n\nconst App = ({ handleP1Increment, handleP2Increment, winner }) => (\n  <Router history={history}>\n    <>\n      <header className=\"jumbotron mt-4 mb-0\">\n        <h1><Link to=\"/\">Pong Ping Pong Ping </Link></h1>\n      </header>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <p><Link to=\"/settings\">Settings</Link></p>\n          <div className=\"row mb-4\">\n            <Player1 handleClick={handleP1Increment} />\n            <Player2 handleClick={handleP2Increment} />\n          </div>\n          <Winner winner={winner} />\n          <hr />\n          <Reset />\n          {/* Insert restart game button here */}\n        </Route>\n\n        <Route exact path=\"/settings\" component={Settings} />\n        <p>Nothing Found.</p>\n\n      </Switch>\n    </>\n  </Router >\n);\n\nexport default App;","const initialState = {\r\n    player1: 0,\r\n    player2: 0,\r\n    player1Name: \"\",\r\n    player2Name: \"\",\r\n    winningScore: 21,\r\n    alernateEvery: 5,\r\n    p1Serving: true,\r\n    winner: \"\",\r\n};\r\n\r\nexport default initialState;","import initialState from \"./initialState\";\r\n\r\nconst player1 = state => ({ ...state, player1: state.player1 + 1 });\r\nconst player2 = state => ({ ...state, player2: state.player2 + 1 });\r\n\r\nconst serving = state =>\r\n    ({ ...state, p1Serving: (state.player1 + state.player2) % state.alernateEvery === 0 ? !state.p1Serving : state.p1Serving });\r\n\r\nconst winner = (state) =>\r\n    ({ ...state, winner: state.player1 >= state.winningScore ? state.player1Name : (state.player2 >= state.winningScore ? state.player2Name : \"\") });\r\n\r\nconst saveSettingsReducer = (state, { player1Name, player2Name, winningScore, alernateEvery }) => {\r\n    return { ...state, player1Name: player1Name, player2Name: player2Name, winningScore: winningScore, alernateEvery: alernateEvery, }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"PLAYER1\": return winner(serving(player1(state)));\r\n        case \"PLAYER2\": return winner(serving(player2(state)));\r\n        case \"RESET\": return initialState;\r\n        case \"SAVE_SETTINGS\": return saveSettingsReducer(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\n\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport initialState from \"./initialState\";\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n    && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./data/store\";\n\nimport { Provider } from \"react-redux\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}