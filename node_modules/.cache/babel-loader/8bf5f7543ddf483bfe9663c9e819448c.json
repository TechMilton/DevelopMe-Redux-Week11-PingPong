{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/origi/desktop/codingFellowship/week_11/ping-pong/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from \"redux\";\nconst initial = {\n  player1: 0,\n  player2: 0,\n  p1Serving: true\n};\n\nconst serving = state => {\n  return { ...state,\n    p1Serving: (state.player1 + state.player2) % 5 === 0 ? !state.p1Serving : state.p1Serving\n  };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"PLAYER1\":\n      return { ...state,\n        player1: state.player1 + 1\n      };\n\n    case \"PLAYER2\":\n      return { ...state,\n        player2: state.player2 + 1\n      };\n\n    case \"RESET\":\n      return initial;\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, initial, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nstore.dispatch({\n  type: \"PLAYER1\"\n});\nstore.dispatch({\n  type: \"PLAYER2\"\n});\nstore.dispatch({\n  type: \"RESET\"\n});\n\nconst render = () => {\n  let state = store.getState();\n  ReactDOM.render( /*#__PURE__*/React.createElement(App, {\n    player1: state.player1,\n    handleP1Increment: () => store.dispatch({\n      type: \"PLAYER1\"\n    }),\n    player2: state.player2,\n    handleP2Increment: () => store.dispatch({\n      type: \"PLAYER2\"\n    }),\n    handleReset: () => store.dispatch({\n      type: \"RESET\"\n    }),\n    p1Servring: state.p1Serving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), document.getElementById('root'));\n};\n\nstore.subscribe(render);\nrender();","map":{"version":3,"sources":["/mnt/c/Users/origi/desktop/codingFellowship/week_11/ping-pong/src/index.js"],"names":["React","ReactDOM","App","createStore","initial","player1","player2","p1Serving","serving","state","reducer","action","type","store","window","__REDUX_DEVTOOLS_EXTENSION__","dispatch","render","getState","document","getElementById","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,CADK;AAEdC,EAAAA,OAAO,EAAE,CAFK;AAGdC,EAAAA,SAAS,EAAE;AAHG,CAAhB;;AAMA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,SAAO,EACL,GAAGA,KADE;AAELF,IAAAA,SAAS,EAAE,CAACE,KAAK,CAACJ,OAAN,GAAgBI,KAAK,CAACH,OAAvB,IAAkC,CAAlC,KAAwC,CAAxC,GAA4C,CAACG,KAAK,CAACF,SAAnD,GAA+DE,KAAK,CAACF;AAF3E,GAAP;AAID,CALD;;AAOA,MAAMG,OAAO,GAAG,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AAAgB,aAAO,EAAE,GAAGH,KAAL;AAAYJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB;AAArC,OAAP;;AAChB,SAAK,SAAL;AAAgB,aAAO,EAAE,GAAGI,KAAL;AAAYH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAArC,OAAP;;AAChB,SAAK,OAAL;AAAc,aAAOF,OAAP;;AACd;AAAS,aAAOK,KAAP;AAJX;AAMD,CAPD;;AASA,MAAMI,KAAK,GAAGV,WAAW,CACvBO,OADuB,EAEvBN,OAFuB,EAGvBU,MAAM,CAACC,4BAAP,IACGD,MAAM,CAACC,4BAAP,EAJoB,CAAzB;AAOAF,KAAK,CAACG,QAAN,CAAe;AAAEJ,EAAAA,IAAI,EAAE;AAAR,CAAf;AACAC,KAAK,CAACG,QAAN,CAAe;AAAEJ,EAAAA,IAAI,EAAE;AAAR,CAAf;AACAC,KAAK,CAACG,QAAN,CAAe;AAAEJ,EAAAA,IAAI,EAAE;AAAR,CAAf;;AAEA,MAAMK,MAAM,GAAG,MAAM;AACnB,MAAIR,KAAK,GAAGI,KAAK,CAACK,QAAN,EAAZ;AACAjB,EAAAA,QAAQ,CAACgB,MAAT,eACE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAER,KAAK,CAACJ,OADjB;AAEE,IAAA,iBAAiB,EAAE,MAAMQ,KAAK,CAACG,QAAN,CAAe;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAf,CAF3B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACH,OAHjB;AAIE,IAAA,iBAAiB,EAAE,MAAMO,KAAK,CAACG,QAAN,CAAe;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAf,CAJ3B;AAKE,IAAA,WAAW,EAAE,MAAMC,KAAK,CAACG,QAAN,CAAe;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAf,CALrB;AAME,IAAA,UAAU,EAAEH,KAAK,CAACF,SANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQEY,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF;AAUD,CAZD;;AAcAP,KAAK,CAACQ,SAAN,CAAgBJ,MAAhB;AACAA,MAAM","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport { createStore } from \"redux\";\n\nconst initial = {\n  player1: 0,\n  player2: 0,\n  p1Serving: true,\n};\n\nconst serving = state => {\n  return {\n    ...state,\n    p1Serving: (state.player1 + state.player2) % 5 === 0 ? !state.p1Serving : state.p1Serving\n  }\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"PLAYER1\": return { ...state, player1: state.player1 + 1 };\n    case \"PLAYER2\": return { ...state, player2: state.player2 + 1 };\n    case \"RESET\": return initial;\n    default: return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  initial,\n  window.__REDUX_DEVTOOLS_EXTENSION__\n  && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.dispatch({ type: \"PLAYER1\" });\nstore.dispatch({ type: \"PLAYER2\" });\nstore.dispatch({ type: \"RESET\" })\n\nconst render = () => {\n  let state = store.getState();\n  ReactDOM.render(\n    <App\n      player1={state.player1}\n      handleP1Increment={() => store.dispatch({ type: \"PLAYER1\" })}\n      player2={state.player2}\n      handleP2Increment={() => store.dispatch({ type: \"PLAYER2\" })}\n      handleReset={() => store.dispatch({ type: \"RESET\" })}\n      p1Servring={state.p1Serving} />,\n    document.getElementById('root')\n  );\n}\n\nstore.subscribe(render);\nrender();"]},"metadata":{},"sourceType":"module"}